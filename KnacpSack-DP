#include <stdio.h>
#include <string.h>

int max(int a, int b) {printf("MAX\n"); return (a > b)? a : b; }

int knapSack(int W, int wt[], int val[], int n)
{
   int i, w;
   int K[n+1][W+1];
 
   // Build table K[][] in bottom up manner
   for (i = 0; i <= n; i++)
   {
         printf("CURRENT WEIGHT: %d CURRENT VALUE=%d\n", wt[i-1], val[i-1]);
       for (w = 0; w <= W; w++)
       {
           printf("i=%d w=%d\n", i,w);
          
           if (i==0 || w==0)
               K[i][w] = 0;
           else{
    
            if (wt[i-1] <= w)
           {
               printf("---------IF\n");
               K[i][w] = max(val[i-1] + K[i-1][w-wt[i-1]],  K[i-1][w]);
               printf("K[i][w]=%d\n ", K[i][w]);
           }
                 
           else{
               printf("---------ELSE\n");
               K[i][w] = K[i-1][w];
                printf("K[i][w]=%d\n ", K[i][w]);
           }  
          }           
       }
       printf("\n");
   }
 
   return K[n][W];
}

main()
{
   int val[] = {60, 100, 120};
    int wt[] = {1, 2, 3};
    int  W = 6;
    int n = sizeof(val)/sizeof(val[0]);
    printf("%d", knapSack(W, wt, val, n));
    return 0;
}
